{
	"version": 3,
	"file": "../scss/main.css",
	"sources": [
		"../scss/main.scss",
		"../scss/_mainsetup.scss",
		"../scss/_fontsetup.scss",
		"../scss/_colorsetup.scss",
		"../scss/_mixin.scss"
	],
	"sourcesContent": [
		"@import 'mainsetup';\r\n@import 'fontsetup';\r\n@import 'colorsetup';\r\n@import 'mixin';\r\n\r\nhtml {\r\n    scroll-behavior: smooth;\r\n}\r\n\r\nbody {\r\n    background: url( //assets.ubuntu.com/sites/ubuntu/latest/u/img/backgrounds/image-background-paper.png) repeat-y center top;\r\n        color: $color-neutral-cool-grey;\r\n    font-family: $font-family-norm;\r\n    font-weight: $font-weight-norm;\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n}\r\n\r\nul, li {\r\n    list-style-type: none;\r\n}\r\n\r\na {\r\n    text-decoration: none;\r\n}\r\n\r\nimg {\r\n    width: 100%;\r\n}\r\n\r\n.main-wrapper {\r\n    width: 100vw;\r\n    margin: auto;\r\n\r\n    @include mq-tablet ($tablet-width, $desktop-width) {\r\n        width: $tablet-width;\r\n    }\r\n\r\n    @include mq-desktop ($desktop-width) {\r\n        width: $desktop-width;\r\n    }\r\n}\r\n\r\n// Definer grid \r\n$selector: \".main-grid\";\r\n$grid-fraction: 12;\r\n$grid-template-rows: null;\r\n$grid-column-gap: null;\r\n$grid-background-color: $color-ubuntu-background;\r\n\r\n@include grid-def-sel ($selector, $grid-fraction, $grid-template-rows, $grid-column-gap, $grid-background-color) {\r\n    // Place optinal content to grid \r\n    // grid-template-columns: 1fr 30vw 20vw 1fr;\r\n}\r\n\r\n;\r\n\r\n.item-place {\r\n    grid-column: span 12;\r\n\r\n    @include mq-tablet1 () {\r\n        grid-column: span 6;\r\n    }\r\n}\r\n\r\n$border-width: 2px;\r\n$border-style: solid;\r\n$border-radius: 10;\r\n$border-color: $default-border-color;\r\n$selector: \".klaes\";\r\n\r\n@if $selector == null {\r\n    .billed {\r\n        @include border-def ($border-width, $border-style, $border-radius, $border-color);\r\n        margin: 5vmin;\r\n    }\r\n}\r\n\r\n@else {\r\n    @include border-def-sel ($selector, $border-width, $border-style, $border-radius, $border-color);\r\n}",
		"$tablet-width: 768px; \r\n$desktop-width: 1024px; ",
		"$font-family-norm: 'Ubuntu', sans-serif;\r\n$font-family-condensed: 'Ubuntu Condensed', sans-serif;\r\n$font-family-mono: 'Ubuntu Mono', monospace;\r\n\r\n$font-weight-norm: 400; \r\n$font-weight-bold: 700; ",
		"// Colors \r\n$color-primary-orange: #E95420; \r\n$color-primary-white: #FFFFFF;\r\n$color-primary-black: #000000; \r\n\r\n$color-support-aubergine-light: #77216F; \r\n$color-support-aubergine-mid: #5E2750;\r\n$color-support-aubergine-dark: #2C001E;   \r\n\r\n$color-neutral-warm-grey: #AEA79F;\r\n$color-neutral-cool-grey: #333333;\r\n$color-neutral-text-grey: #111111;\r\n\r\n// default color\r\n$default-border-color: $color-primary-black; \r\n\r\n// Color palette\r\n// ubuntu\r\n$color-ubuntu-primary: $color-primary-orange;\r\n$color-ubuntu-secondary: $color-neutral-warm-grey;\r\n$color-ubuntu-tertiere: $color-support-aubergine-light; \r\n$color-ubuntu-background: $color-primary-white;\r\n$color-ubuntu-font: $color-neutral-cool-grey;\r\n\r\n// canonicle - ikke med i opgaven pt. \r\n$color-canonicle-primary: $color-support-aubergine-light;\r\n$color-canonicle-secondary: $color-primary-white;\r\n$color-canonicle-tertiere: $color-primary-orange; \r\n$color-canonicle-background: $color-neutral-warm-grey;\r\n$color-canonicle-font: $color-primary-black;",
		"// **************************************************\r\n// Mixin library\r\n// Contains all sort of mixix\r\n// ***************************************************/\r\n// **************************************************\r\n// Media queries for screen\r\n// Set default for all media queries\r\n// ***************************************************/\r\n$mqBuffer: 1px !default;\r\n$tablet-width: 768px !default;\r\n$desktop-width: 1024px !default;\r\n\r\n/// Mixin to make mediaqueries for phone, tablet and desktop\r\n/// Changes to content are made in this mixin. Example in comment\r\n/// Use like: @include media-queries ($tablet-width, $desktop-width)\r\n@mixin media-queries($tablet-width, $desktop-width) {\r\n  @media screen and (max-width: #{$tablet-width - $mqBuffer}) {\r\n    // /* Mediaquery for Phones */\r\n  }\r\n\r\n  @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - $mqBuffer}) {\r\n    // /* Mediaquery for tablet */\r\n  }\r\n\r\n  @media (min-width: #{$desktop-width}) {\r\n    // /* Mediaquery for desktop */\r\n    // .grid-prod-img {\r\n    //     grid-column: 2 / 5; \r\n    // }\r\n    // .grid-prod-text {\r\n    //     grid-column: 5 / 11; \r\n    // }\r\n  }\r\n}\r\n\r\n/// Mixin to make mediaquery for phone\r\n/// Changes are set up from call and inserted via @content\r\n/// Use like: @include mq-phone ($tablet-width)\r\n@mixin mq-phone ($tablet-width) {\r\n  @media screen and (max-width: #{$tablet-width - $mqBuffer}) {\r\n    /* PHONE MQ */\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Mixin to make mediaquery for tablet\r\n/// Changes are set up from call and inserted via @content\r\n/// Use like: @include mq-tablet ($tablet-width, $destop-width)\r\n/// mq-tablet1 is used when there's no mq for desktop\r\n@mixin mq-tablet ($tablet-width, $destop-width) {\r\n  @media screen and (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - $mqBuffer}) {\r\n    /* TABLET MQ */\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin mq-tablet1 {\r\n  @media screen and (min-width: #{$tablet-width}) {\r\n    /* TABLET MQ */\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Mixin to make mediaquery for desktop\r\n/// Changes are set up from call and inserted via @content\r\n/// Use like: @include mq-desktop ($destop-width)\r\n@mixin mq-desktop ($destop-width) {\r\n  @media screen and (min-width: #{$desktop-width}) {\r\n    /* DESKTOP MQ */\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Mixin to make custom mediaqueries\r\n/// Changes are set up from call and inserted via @content\r\n/// Use like: @include mq-tablet ($min, $max)\r\n@mixin mq-custom($min, $max) {\r\n  @media screen and (min-width: #{$min}) and (max-width: #{$max - $mqBuffer}) {\r\n    /* CUSTOM MQ */\r\n    @content;\r\n  }\r\n}\r\n\r\n// **************************************************\r\n// Definition grid\r\n// Set default \r\n// ***************************************************/\r\n$grid-klaes: null !default; \r\n$grid-fraction: 12 !default;\r\n$grid-margin-aside: null !default;\r\n$grid-rows: null !default;\r\n$grid-gap: null !default;\r\n$grid-background-color: inherit !default;\r\n\r\n/// Define grid without class and with variable classname \r\n/// Changes to content are made both in this mixin and via @content.\r\n/// without class: @include grid-def ($grid-fraction, ¤grid-template-rows, $grid-column-gap,$grid-background-color)\r\n/// with class: @include grid-def-sel ($selector $grid-fraction, ¤grid-template-rows, $grid-column-gap,$grid-background-color)\r\n@mixin grid-def ($grid-fraction, $grid-template-rows, $grid-column-gap, $grid-background-color) {\r\n   \r\n    display: grid;\r\n    \r\n    @if $grid-fraction > 0 {\r\n      grid-template-columns: repeat($grid-fraction, 1fr);\r\n    }\r\n\r\n    @if $grid-template-rows=null {\r\n      grid-template-rows: auto;\r\n    }\r\n\r\n    @else {\r\n      grid-template-rows: $grid-template-rows\r\n    }\r\n\r\n    background-color: $grid-background-color;\r\n\r\n    @content;\r\n  }\r\n\r\n  @mixin grid-def-sel ($selector, $grid-fraction, $grid-template-rows, $grid-column-gap, $grid-background-color) {\r\n    #{$selector} {\r\n      @include grid-def ($grid-fraction, $grid-template-rows, $grid-column-gap, $grid-background-color)\r\n    }\r\n\r\n    @content;\r\n  }\r\n\r\n\r\n// **************************************************\r\n// Definition border\r\n// Set default \r\n// ***************************************************/\r\n$border-width: 0 !default;\r\n$border-style: solid !default;\r\n$border-radius: 0 !default;\r\n$border-color: $default-border-color !default;\r\n$selector: null !default;\r\n\r\n/// Mixin to define border\r\n/// Changes to content are made in this mixin.\r\n/// Use like: @include def-border ($border-width, $border-style, $border-radius, $border-color)\r\n/// \r\n@mixin border-def($border-width, $border-style, $border-radius, $border-color) {\r\n  border-width: $border-width;\r\n  border-style: $border-style;\r\n  border-radius: $border-radius;\r\n  border-color: $border-color;\r\n  box-sizing: border-box;\r\n}\r\n\r\n@mixin border-def-sel ($selector, $border-width, $border-style, $border-radius, $border-color) {\r\n  #{$selector} {\r\n    @include border-def($border-width, $border-style, $border-radius, $border-color)\r\n  }\r\n}\r\n\r\n/// Center content in container \r\n/// Changes to content are made in this mixin.\r\n/// Use like: @include center-content \r\n@mixin center-content {\r\n  .center-content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n}\r\n\r\n/// Set shadow on an item\r\n/// Changes to content are made set external \r\n/// Use like: @include item-shadow\r\n@mixin item-shadow {\r\n  .shadow-class {\r\n    @content\r\n  }\r\n}\r\n \r\n/// Set scale on an item\r\n/// Changes to content are made in this mixin\r\n/// Use like: @include item-scale ($ratio)\r\n@mixin item-scale ($ratio) {\r\n    -webkit-transform: scale($ratio);\r\n       -moz-transform: scale($ratio);\r\n        -ms-transform: scale($ratio);\r\n         -o-transform: scale($ratio);\r\n            transform: scale($ratio);\r\n  \r\n}\r\n\r\n@mixin text-shadow ($string: 0 1px 3px rgba(0, 0, 0, 0.25)) {\r\n  text-shadow: $string;\r\n}\r\n@mixin box-shadow ($string) {\r\n  -webkit-box-shadow: $string;\r\n  -moz-box-shadow:    $string;\r\n  box-shadow:         $string;\r\n}\r\n@mixin drop-shadow ($x: 0, $y: 1px, $blur: 2px, $spread: 0, $alpha: 0.25) {\r\n  -webkit-box-shadow:     $x $y $blur $spread rgba(0, 0, 0, $alpha);\r\n  -moz-box-shadow:        $x $y $blur $spread rgba(0, 0, 0, $alpha);\r\n  box-shadow:             $x $y $blur $spread rgba(0, 0, 0, $alpha);\r\n}\r\n@mixin inner-shadow ($x: 0, $y: 1px, $blur: 2px, $spread: 0, $alpha: 0.25) {\r\n  -webkit-box-shadow: inset $x $y $blur $spread rgba(0, 0, 0, $alpha);\r\n  -moz-box-shadow:    inset $x $y $blur $spread rgba(0, 0, 0, $alpha);\r\n  box-shadow:         inset $x $y $blur $spread rgba(0, 0, 0, $alpha);\r\n}\r\n\r\n@mixin box-sizing ($type: border-box) {\r\n  -webkit-box-sizing: $type;\r\n  -moz-box-sizing:    $type;\r\n  box-sizing:         $type;\r\n}\r\n\r\n@mixin border-radius ($radius: 5px) {\r\n  -webkit-border-radius: $radius;\r\n  -moz-border-radius:    $radius;\r\n  border-radius:         $radius;\r\n\r\n  -moz-background-clip:    padding;\r\n  -webkit-background-clip: padding-box;\r\n  background-clip:         padding-box;\r\n}\r\n@mixin border-radiuses ($topright: 0, $bottomright: 0, $bottomleft: 0, $topleft: 0) {\r\n  -webkit-border-top-right-radius:    $topright;\r\n  -webkit-border-bottom-right-radius: $bottomright;\r\n  -webkit-border-bottom-left-radius:  $bottomleft;\r\n  -webkit-border-top-left-radius:     $topleft;\r\n\r\n  -moz-border-radius-topright:        $topright;\r\n  -moz-border-radius-bottomright:     $bottomright;\r\n  -moz-border-radius-bottomleft:      $bottomleft;\r\n  -moz-border-radius-topleft:         $topleft;\r\n\r\n  border-top-right-radius:            $topright;\r\n  border-bottom-right-radius:         $bottomright;\r\n  border-bottom-left-radius:          $bottomleft;\r\n  border-top-left-radius:             $topleft;\r\n\r\n  -moz-background-clip:    padding;\r\n  -webkit-background-clip: padding-box;\r\n  background-clip:         padding-box;\r\n}\r\n\r\n@mixin opacity ($opacity: 0.5) {\r\n  -webkit-opacity:        $opacity;\r\n  -moz-opacity:           $opacity;\r\n  opacity:                $opacity;\r\n}"
	],
	"mappings": ";AAKA,AAAA,IAAI,CAAC;EACD,eAAe,EAAE,MAAO;CAC3B;;;AAED,AAAA,IAAI,CAAC;EACD,UAAU,EAA2F,yFAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG;EACtH,KAAK,EGDa,OAAO;EHE7B,WAAW,EEZI,QAAQ,EAAE,UAAU;EFanC,WAAW,EETI,GAAG;EFUlB,MAAM,EAAE,CAAE;EACV,OAAO,EAAE,CAAE;EACX,MAAM,EAAE,CAAE;CACb;;;AAED,AAAA,EAAE,EAAE,AAAA,EAAE,CAAC;EACH,eAAe,EAAE,IAAK;CACzB;;;AAED,AAAA,CAAC,CAAC;EACE,eAAe,EAAE,IAAK;CACzB;;;AAED,AAAA,GAAG,CAAC;EACA,KAAK,EAAE,IAAK;CACf;;;AAED,AAAA,aAAa,CAAC;EACV,KAAK,EAAE,KAAM;EACb,MAAM,EAAE,IAAK;CAShB;;AIQC,MAAM,CAAN,MAAM,MAAM,SAAS,EAAE,KAAK,OAAO,SAAS,EAAE,MAAM;;EJnBtD,AAAA,aAAa,CAAC;IIoBV,eAAe;IJfX,KAAK,ECpCE,KAAK;GD0CnB;;;AIyBC,MAAM,CAAN,MAAM,MAAM,SAAS,EAAE,MAAM;;EJpC/B,AAAA,aAAa,CAAC;IIqCV,gBAAgB;IJ5BZ,KAAK,ECvCG,MAAM;GDyCrB;;;;AI8EG,AAAA,UAAU,CAAV;EApBA,OAAO,EAAE,IAAK;EAGZ,qBAAqB,EAAE,eAAM;EAI7B,kBAAkB,EAAE,IAAK;EAO3B,gBAAgB,EDhHE,OAAO;CCwHxB;;;AJhEL,AAAA,WAAW,CAAC;EACR,WAAW,EAAE,OAAQ;CAKxB;;AIPC,MAAM,CAAN,MAAM,MAAM,SAAS,EAAE,KAAK;;EJC9B,AAAA,WAAW,CAAC;IIAR,eAAe;IJIX,WAAW,EAAE,MAAO;GAE3B;;;;AIuFC,AAAA,MAAM,CAAN;EARA,YAAY,EJ7EC,GAAG;EI8EhB,YAAY,EJ7EC,KAAK;EI8ElB,aAAa,EJ7EC,EAAE;EI8EhB,YAAY,ED/IQ,OAAO;ECgJ3B,UAAU,EAAE,UAAW;CAMtB",
	"names": []
}